=begin
                        Largest product in a series

    The  four  adjacent  digits  in the 1000-digit number that have the greatest
    product are 9 × 9 × 8 × 9 = 5832.

                73167176531330624919225119674426574742355349194934
                96983520312774506326239578318016984801869478851843
                85861560789112949495459501737958331952853208805511
                12540698747158523863050715693290963295227443043557
                66896648950445244523161731856403098711121722383113
                62229893423380308135336276614282806444486645238749
                30358907296290491560440772390713810515859307960866
                70172427121883998797908792274921901699720888093776
                65727333001053367881220235421809751254540594752243
                52584907711670556013604839586446706324415722155397
                53697817977846174064955149290862569321978468622482
                83972241375657056057490261407972968652414535100474
                82166370484403199890008895243450658541227588666881
                16427171479924442928230863465674813919123162824586
                17866458359124566529476545682848912883142607690042
                24219022671055626321111109370544217506941658960408
                07198403850962455444362981230987879927244284909188
                84580156166097919133875499200524063689912560717606
                05886116467109405077541002256983155200055935729725
                71636269561882670428252483600823257530420752963450

    Find  the  thirteen  adjacent  digits in the 1000-digit number that have the
    greatest product. What is the value of this product?
=end

#!/usr/bin/ruby

def largest_product_series( series, digits )
    max = 0

    for i in 0..series.length do
        if series.length-1 >= i + digits-1 then
            temp = 1
            for j in i..i+digits-1 do
                temp = temp * series[ j ]
            end

            if temp > max then
                max = temp
                index = i
            end
        else
            break
        end
    end

    return series[ index..index+digits-1 ]
end

num = '7316717653133062491922511967442657474235534919493496983520312774506326239
       5783180169848018694788518438586156078911294949545950173795833195285320880
       5511125406987471585238630507156932909632952274430435576689664895044524452
       3161731856403098711121722383113622298934233803081353362766142828064444866
       4523874930358907296290491560440772390713810515859307960866701724271218839
       9879790879227492190169972088809377665727333001053367881220235421809751254
       5405947522435258490771167055601360483958644670632441572215539753697817977
       8461740649551492908625693219784686224828397224137565705605749026140797296
       8652414535100474821663704844031998900088952434506585412275886668811642717
       1479924442928230863465674813919123162824586178664583591245665294765456828
       4891288314260769004224219022671055626321111109370544217506941658960408071
       9840385096245544436298123098787992724428490918884580156166097919133875499
       2005240636899125607176060588611646710940507754100225698315520005593572972
       571636269561882670428252483600823257530420752963450'.split( // ).map(
       &:to_i )

puts largest_product_series( num, 13 ).inject { | result, element |
                                                  result = result * element }
