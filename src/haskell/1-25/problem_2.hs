-- 						Even Fibonacci numbers

-- Each  new term in the Fibonacci sequence is generated by adding the previous
-- two terms. By starting with 1 and 2, the first 10 terms will be:

-- 				1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

-- By  considering  the  terms  in  the  Fibonacci sequence whose values do not
-- exceed four million, find the sum of the even-valued terms.

-- 							Answer: 4613732

import Data.List

fibonacci :: (Integral a) => a -> [a]
fibonacci 1 = [1]
fibonacci 2 = [1, 2]
fibonacci nth = series where
    previous = fibonacci (pred nth)
    evenPrevious = previous !! (-) (length previous) 2
    series = (++) previous ((:) ((+) (last previous) evenPrevious) [])

takeFibWhile :: (Integral a) => a -> [a]
takeFibWhile takeLimit = takeWhile (< takeLimit) $ [last (fibonacci x) | x <- [1..]]

evenFibLimit :: (Integral a) => a -> [a]
evenFibLimit limit = filter even $ takeFibWhile limit

main :: IO()
main = do
    print $ foldl' (+) 0 $ evenFibLimit 4000000

