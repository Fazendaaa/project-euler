// 						Even Fibonacci numbers

// Each  new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:

// 				1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By  considering  the  terms  in  the  Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.

// 							Answer: 4613732
'use strict';

import { isEven } from '../project_euler';

const fibonacci = (nth: number): Array<number> => {
    const fibs = [1, 2];

    if (0 > nth) {
        return [];
    } if (1 === nth) {
        return [1];
    } if (2 === nth) {
        return fibs;
    }

    for (let iterator = 2; iterator < nth; iterator += 1) {
        fibs.push(fibs[iterator - 2] + fibs[iterator - 1]);
    }

    return fibs;
};

const fibonacciLimit = (limit: number): Array<number> => {
    let popped = 0;
    let counter = 0;

    do {
        counter += 1;
        popped = <number>fibonacci(counter).pop();
    } while (popped < limit);

    return fibonacci(counter - 1);
};

const limit = 4000000;
console.log(fibonacciLimit(limit).filter(isEven).reduce((acc, cur) => acc + cur, 0));
