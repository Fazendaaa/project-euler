"""
                            Even Fibonacci numbers

	Each  new term in the Fibonacci sequence is generated by adding the previous
	two terms. By starting with 1 and 2, the first 10 terms will be:

					1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By  considering  the  terms  in  the  Fibonacci sequence whose values do not
	exceed four million, find the sum of the even-valued terms.

								Answer: 4613732
"""

import functools

def even_fibonacci_numbers(limit):
    """Given limit, returns all the even fibonacci numbers in that range"""
    fib = [1]
    prox = 2

    while prox < limit:
        fib.append(prox)
        prox += fib[-2]
    # mislaced-comparison-constant a.k.a.: 'Yoda conditions'
    # pylint: disable=misplaced-comparison-constant
    return [x for x in fib if 0 == x%2]

print(functools.reduce(lambda x, y: x+y, even_fibonacci_numbers(4000000)))
